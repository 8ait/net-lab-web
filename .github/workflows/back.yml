name: back
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - back/**
      - .github\workflows\back.yml
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [self-hosted]
        dotnet-version: ['7.0.x']
    steps:
      - name: Install dependencies
        run:
          dotnet restore
      - name: Build
        run:
          dotnet build --configuration Release --no-restore
      - name: Test
        run:
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude=\"NetProblem.[*].Interfaces\" /p:Threshold=80 /p:ThresholdType=branch
  # sonar:
  #   name: sonar
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       dotnet-version: ['7.0.x']
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: ${{ matrix.dotnet-version }}
  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.11
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: Cache SonarCloud packages
  #       uses: actions/cache@v1
  #       with:
  #         path: ~\sonar\cache
  #         key: ${{ runner.os }}-sonar
  #         restore-keys: ${{ runner.os }}-sonar
  #     - name: Install SonarCloud scanners
  #       run: |
  #         dotnet tool install --global dotnet-sonarscanner
  #     - name: Build and analyze
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       run: |
  #         cd back
  #         dotnet-sonarscanner begin /k:"8ait_net-problem-web" /o:"8ait" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
  #         dotnet build NetProblem.sln
  #         dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  #
